package cz.cvut.fel.kolovjan.cli.command;

import cz.cvut.fel.kolovjan.cli.executor.CommandExecutorInterface;
import cz.cvut.fel.kolovjan.exception.AlanineException;
import cz.cvut.fel.kolovjan.exception.PiholeAlreadyEnabledException;
import cz.cvut.fel.kolovjan.utils.CommandResponse;
import cz.cvut.fel.kolovjan.utils.ExecutorReturnWrapper;
import lombok.extern.slf4j.Slf4j;

import javax.enterprise.context.ApplicationScoped;

@ApplicationScoped
@Slf4j
public class EnableCommand extends Command {

    //    In CDI, a normal scoped bean must always declare a no-args constructor (this constructor is normally generated by the compiler unless you declare any other constructor). However, this requirement complicates constructor injection - you would need to provide a dummy no-args constructor to make things work in CDI.
    public EnableCommand() {
        super(null);
    }

    public EnableCommand(CommandExecutorInterface commandExecutor) {
        super(commandExecutor);
    }

    public CommandResponse execute() {

        ExecutorReturnWrapper returnWrapper = commandExecutor.execute("pihole enable");
        /// no error execution
        if (returnWrapper.getExitValue() == 0) {
            if (returnWrapper.getOutput().contains("Pi-hole Enabled")) {
                return new CommandResponse(true, "Pi-hole Enabled");

            } else if (returnWrapper.getOutput().contains("Blocking already enabled, nothing to do")) {
                /// pihole was already enabled

                throw new PiholeAlreadyEnabledException();
            } else {
                log.error("unknown output of disable : {} ",returnWrapper.getErrorOutput());
                throw new AlanineException("unknown output : " + returnWrapper.getErrorOutput());
            }
        } else {
            throw new AlanineException(returnWrapper.getErrorOutput());
        }
    }
}
