package cz.cvut.fel.kolovjan.cli.command;


import cz.cvut.fel.kolovjan.cli.executor.CommandExecutorInterface;
import cz.cvut.fel.kolovjan.exception.PluginException;
import cz.cvut.fel.kolovjan.utils.CommandResponse;
import cz.cvut.fel.kolovjan.utils.ExecutorReturnWrapper;
import lombok.extern.slf4j.Slf4j;

import javax.enterprise.context.ApplicationScoped;

@ApplicationScoped
@Slf4j
public class EnableLoggingCommand extends Command {
    public EnableLoggingCommand(CommandExecutorInterface commandExecutor) {
        super(commandExecutor);
    }


    //    In CDI, a normal scoped bean must always declare a no-args constructor (this constructor is normally generated by the compiler unless you declare any other constructor). However, this requirement complicates constructor injection - you would need to provide a dummy no-args constructor to make things work in CDI.
    public EnableLoggingCommand() {
        super(null);
    }

    public CommandResponse execute() {
        ExecutorReturnWrapper executorReturnWrapper = commandExecutor.execute("pihole logging on");
        log.info(executorReturnWrapper.toString());
        if (executorReturnWrapper.getOutput().contains("Logging has been enabled!")) {
            /// no error and correct message
            return new CommandResponse(true, "Logging has been enabled!");
        } else {
            /// some kind of error
            throw new PluginException(executorReturnWrapper.getErrorOutput());
        }
    }
}
