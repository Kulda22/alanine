name: buildx-java-master

on:
  pull_request:
    branches: master
  push:
    branches: master
    tags:


jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Make artifacts folder
        run: mkdir artifacts
      - name: Build with Maven
        run: mvn -Dquarkus.package.type=fast-jar package
      - name: Create java artifact
        run: tar -C target -cJf  alanine.tar.xz quarkus-app && cp alanine.tar.xz artifacts/
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v2
        with: # in production, fix the version of your dependencies
          buildx-version: latest
          skip-cache: false
          qemu-version: latest

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build java arm7 image
        run: |
          docker buildx build -f Dockerfile.fastjar \
          --platform linux/arm/v7 \
          -t kulda22/alanine:latest-arm7 \
          . \
          --push
        # AMD64 native image
      - name: Create amd64 native binary
        run: mvn package -Pnative -Dquarkus.native.container-build=true
      - name: Create amd64 artifact
        run: cp target/*-runner artifacts/alanine-amd64-runner
      - name: build amd64 image
        run: |
          docker buildx  build \
          -f Dockerfile.native --platform linux/amd64 \
          -t kulda22/alanine:latest-amd64 . \
          --push
        #ARM64 native image with custom builder image
      - name: Create arm64 native binary
        run: |
          mvn package -Pnative -Dquarkus.native.container-build=true \
          -Dquarkus.native.builder-image=kulda22/alanine:native-builder-arm64
      - name: Create arm64 artifact
        run: cp target/*-runner artifacts/alanine-arm64-runner
      - name: Build arm64 docker image
        run: |
          docker buildx  build \
          -f Dockerfile.native --platform linux/arm64 \
          -t kulda22/alanine:latest-arm64 . --push
      - name: Create manifest
        run: |
          docker manifest create kulda22/alanine:latest \
          --amend kulda22/alanine:latest-arm64 \
          --amend kulda22/alanine:latest-amd64 \
          --amend kulda22/alanine:latest-arm7
      - name: Push manifest
        run: |
          docker manifest push kulda22/alanine:latest
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          draft: true
          title: "Development Build"
          files: |
            artifacts/alanine.tar.xz
            artifacts/alanine-amd64-runner
            artifacts/alanine-arm64-runner

